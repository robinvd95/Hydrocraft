// Date: 9-5-2013 17:41:27
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package hydrocraft.client.models;

import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelGrinder extends ModelHydrocraft
{
	//fields
	ModelRenderer stone1;
	ModelRenderer stone2;
	ModelRenderer bottom;
	ModelRenderer stone3;
	ModelRenderer stone4;
	ModelRenderer stone5;
	ModelRenderer stick;
	ModelRenderer connector;

	public ModelGrinder()
	{
		textureWidth = 128;
		textureHeight = 64;

		stone1 = new ModelRenderer(this, 0, 22);
		stone1.addBox(-4F, 0F, -4F, 8, 4, 8);
		stone1.setRotationPoint(0F, 12F, 0F);
		stone1.setTextureSize(128, 64);
		stone1.mirror = true;
		setRotation(stone1, 0F, 0F, 0F);
		stone2 = new ModelRenderer(this, 0, 34);
		stone2.addBox(-3F, 0F, 4F, 6, 4, 1);
		stone2.setRotationPoint(0F, 12F, 0F);
		stone2.setTextureSize(128, 64);
		stone2.mirror = true;
		setRotation(stone2, 0F, 0F, 0F);
		bottom = new ModelRenderer(this, 0, 0);
		bottom.addBox(0F, 0F, 0F, 14, 8, 14);
		bottom.setRotationPoint(-7F, 16F, -7F);
		bottom.setTextureSize(128, 64);
		bottom.mirror = true;
		setRotation(bottom, 0F, 0F, 0F);
		stone3 = new ModelRenderer(this, 0, 34);
		stone3.addBox(-3F, 0F, -5F, 6, 4, 1);
		stone3.setRotationPoint(0F, 12F, 0F);
		stone3.setTextureSize(128, 64);
		stone3.mirror = true;
		setRotation(stone3, 0F, 1.570796F, 0F);
		stone4 = new ModelRenderer(this, 0, 34);
		stone4.addBox(-3F, 0F, -5F, 6, 4, 1);
		stone4.setRotationPoint(0F, 12F, 0F);
		stone4.setTextureSize(128, 64);
		stone4.mirror = true;
		setRotation(stone4, 0F, 0F, 0F);
		stone5 = new ModelRenderer(this, 0, 34);
		stone5.addBox(-3F, 0F, -5F, 6, 4, 1);
		stone5.setRotationPoint(0F, 12F, 0F);
		stone5.setTextureSize(128, 64);
		stone5.mirror = true;
		setRotation(stone5, 0F, -1.570796F, 0F);
		stick = new ModelRenderer(this, 0, 0);
		stick.addBox(-1F, 0F, -1F, 2, 3, 2);
		stick.setRotationPoint(0F, 8F, 0F);
		stick.setTextureSize(128, 64);
		stick.mirror = true;
		setRotation(stick, 0F, 0F, 0F);
		connector = new ModelRenderer(this, 0, 39);
		connector.addBox(-2F, 0F, -2F, 4, 1, 4);
		connector.setRotationPoint(0F, 11F, 0F);
		connector.setTextureSize(128, 64);
		connector.mirror = true;
		setRotation(connector, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5);
		stone1.render(f5);
		stone2.render(f5);
		bottom.render(f5);
		stone3.render(f5);
		stone4.render(f5);
		stone5.render(f5);
		stick.render(f5);
		connector.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
	}

	@Override
	public void renderInventory() {
		this.renderModel(0.0625f);
	}
	
	public void renderModel(float f5){
		stone1.render(f5);
		stone2.render(f5);
		bottom.render(f5);
		stone3.render(f5);
		stone4.render(f5);
		stone5.render(f5);
		stick.render(f5);
		connector.render(f5);
	}

}
